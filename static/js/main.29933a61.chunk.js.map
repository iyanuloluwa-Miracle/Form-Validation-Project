{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","reportWebVitals.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","background","props","classes","className","useStyles","makeStyles","theme","root","backgroundColor","searchInput","opacity","padding","spacing","fontSize","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","fontsize","sm","IconButton","Badge","badgeContent","color","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","others","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","table","marginTop","fontweight","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stablesort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","dialogContent","textAlign","dialogActions","justifyContent","ConfirmDialog","confirmDialog","setConfirmDialog","DialogActions","onConfirm","pageContent","newButton","right","disableSorting","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","findIndex","InputProps","InputAdornment","filter","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","createMuiTheme","palete","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29933a61.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\nconst style= {\r\n    sideMenu:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        width: '320px',\r\n        height: '100%',\r\n        background: '#253053'\r\n    }\r\n}\r\n\r\nconst SideMenu = (props) => {\r\n    const { classes } = props;\r\n    return(\r\n        <div className={classes.sideMenu}>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(style)(SideMenu);\r\n","import { AppBar, Badge, Grid, IconButton, InputBase, makeStyles, Toolbar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        backgroundColor:'#fff',\r\n    },\r\n    searchInput:{\r\n        opacity: '0.6',\r\n        padding: `0px ${theme.spacing(1)}px`,\r\n        fontSize: '0.8rem',\r\n        '&:hover':{\r\n            backgroundColor:'#f2f2f2'\r\n        }\r\n    }\r\n\r\n}))\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return(\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container\r\n                alignItems=\"center\">\r\n                    <Grid item>\r\n                        <InputBase\r\n                        placeholder=\"Search topics\"\r\n                        className={classes.searchInput}\r\n                        startAdornment={<SearchIcon fontsize=\"small\"/>}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm></Grid>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <Badge badgeContent= {4} color=\"secondary\">\r\n                                <NotificationsNoneIcon fontsize=\"small\" />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>    \r\n                            <Badge badgeContent= {3} color=\"primary\">\r\n                                <ChatBubbleOutlineIcon fontsize=\"small\"/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <PowerSettingsNewIcon fontsize=\"small\"/>\r\n                        </IconButton>                                \r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles, } from '@material-ui/core'\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        backgroundColor:'#fdfdff'\r\n    },\r\n    pageHeader:{\r\n        padding:theme.spacing(4),\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    pageIcon:{\r\n        display:'inline-block',\r\n        padding:theme.spacing(2),\r\n        color:'#3c44b1'\r\n\r\n    },\r\n    pageTitle:{\r\n        paddingLeft:theme.spacing(4),\r\n        '& .MuiTypography-subTitle2':{\r\n            opacity:'0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props ;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div>\r\n                <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </Paper>\r\n    )\r\n}","import React from 'react'\r\nimport {Button as MuiButton, makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props){\r\n    const {text, size, color, variant, onClick, ...others} = props\r\n    const classes = useStyles();\r\n    return(\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size|| \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...others}\r\n            classes={{root: classes.root, label: classes.label}}>\r\n            {text}\r\n        </MuiButton>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles( theme =>({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },    \r\n\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className = {`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n\r\n    )\r\n\r\n}    ","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    DatePicker,\r\n    Button,\r\n    ActionButton\r\n}\r\n\r\nexport default Controls;","import { TextField } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\n\r\nexport default function Input(props) {\r\n    const {name, label, value, error=null, onChange, ...other } = props;\r\n    return(\r\n        <TextField \r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}                      \r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true, helperText:error})}\r\n        />\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup,FormControlLabel, Radio  } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const {name, label, value, onChange, items} = props;\r\n    return(\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}                      \r\n                onChange={onChange}>\r\n                {\r\n                        \r\n                    items.map(\r\n                        (item)=>(\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title}  />\r\n                        )\r\n                    )\r\n                }\r\n                \r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, InputLabel,Select as MuiSelect,MenuItem, FormHelperText } from '@material-ui/core'\r\n\r\nexport default function Select(props){\r\n    const {name, label ,value,error=null,onChange, options} = props;\r\n    return(\r\n        <FormControl variant= \"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n            label={label}\r\n            name={name}\r\n            value= {value}\r\n            onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item =>(<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport {FormControl, FormControlLabel,Checkbox as MuiCheckbox} from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n    const {name, label, value, onChange } = props;\r\n\r\n\r\nconst convertToDefEventPara =(name,value)=>({\r\n    target:{\r\n        name, value\r\n    }\r\n})    \r\n    return(\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox\r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={ e => onChange(convertToDefEventPara(name,e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />    \r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function DatePicker(props){\r\n    const convertToDefEventPara =(name, value)=>({\r\n        target:{\r\n            name, value\r\n        }\r\n    })\r\n\r\n    const {name, label, value, onChange} = props;\r\n    return(\r\n        <MuiPickersUtilsProvider utils = {DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date=> onChange(convertToDefEventPara(name.date))}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\nexport function useForm(initialFValues, validateOnChange=false, validate){\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e =>{\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n        if(validateOnChange)\r\n            validate({[name]: value})\r\n    }\r\n    const resetForm =()=>{\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n    return{\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n\r\n    }\r\n}))\r\n\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const {children,... other } = props;\r\n    return(\r\n        <form className = {classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}","import { parse } from \"date-fns\";\r\n\r\nconst KEYS ={\r\n    employees:'employees',\r\n    employeeId:'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = ()=>([\r\n    { id:'1', title: 'Development'},\r\n    { id:'2', title: 'Marketing'},\r\n    { id:'3', title: 'Accounting'},\r\n    { id:'4', title: 'HR'},\r\n])\r\n\r\nexport function insertEmployee(data){\r\n    let employees=getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees,JSON.stringify(employees))\r\n}\r\nexport function updateEmployee(data){\r\n    let employees=getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = {...data }    \r\n    localStorage.setItem(KEYS.employees,JSON.stringify(employees))\r\n}\r\nexport function deleteEmployee(id){\r\n    let employees=getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id !=id);  \r\n    localStorage.setItem(KEYS.employees,JSON.stringify(employees))\r\n}\r\nexport function generateEmployeeId() {\r\n    if(localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if(localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees,JSON.stringify([]))\r\n    let employees =JSON.parse(localStorage.getItem(KEYS.employees)); \r\n    \r\n    let departments = getDepartmentCollection();\r\n\r\n    return employees.map(x =>({\r\n        ...x,\r\n        department : departments[x.departmentId-1].title\r\n    }))\r\n}","import React, {useState,useEffect} from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\nconst genderItems = [\r\n    {id:'male',title:'Male'},\r\n    {id:'female',title:'Female'},\r\n    {id:'other',title:'Other'},\r\n\r\n]\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate:new Date(),\r\n    isPermanent:false,\r\n}\r\nexport default function EmployeeForm(props) {\r\n    const {addOrEdit, recordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName?\"\":\"This Field is required.\"\r\n        if ('email' in fieldValues)    \r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\r\n        if ('mobile' in fieldValues)    \r\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)    \r\n            temp.departmentId= fieldValues.departmentId.length?\"\":\"This Field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n\r\n    }\r\n   \r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors, \r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            addOrEdit(values,resetForm);\r\n        }    \r\n    }\r\n    useEffect(() =>{\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n\r\n            })\r\n\r\n    },  [recordForEdit])\r\n\r\n\r\n    return (\r\n        \r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name = \"fullName\"\r\n                        label = \"Full Name\"\r\n                        value = {values.fullName}\r\n                        onChange = {handleInputChange}\r\n                        error ={errors.fullName}\r\n                    />    \r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name= \"email\"\r\n                        value={values.email}\r\n                        onChange = {handleInputChange}\r\n                        error ={errors.email}    \r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange = {handleInputChange}\r\n                        error ={errors.mobile}    \r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name = \"city\"\r\n                        value={values.city}\r\n                        onChange = {handleInputChange}    \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}                      \r\n                        onChange={handleInputChange}\r\n                        items = {genderItems}\r\n\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error ={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <Controls.Checkbox \r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />    \r\n                    </div>                                    \r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n        \r\n    )\r\n}","import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th' : {\r\n            fontweight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor:theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontweight:'300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor:'#B3D5F2',\r\n            color:'pointer'\r\n        }, \r\n    }\r\n}))\r\nexport default function useTable(records,headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n\r\n        </Table>\r\n    )\r\n    const TblHead = props =>{\r\n        const handleSortRequest = cellId =>{\r\n            const isAsc = orderBy === cellId && order ===\"asc\";\r\n            setOrder(isAsc?'desc':'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n        return(<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                    <TableCell key={headCell.id}\r\n                        sortDirection={orderBy === headCell.id ? order : false}>\r\n                        <TableSortLabel\r\n                        active = {orderBy }\r\n                            direction = {orderBy === headCell.id ? order: 'asc'}\r\n                            onClick =  { () => {handleSortRequest(headCell.id)}}>\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n    const handleChangePage= (event, newPage) =>{\r\n        setPage(newPage);\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value,10))\r\n        setPage(0);\r\n\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page ={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage= {handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stablesort(array,comparator){\r\n        const stabilizedThis = array.map((el,index) => [el,index]);\r\n        stabilizedThis.sort((a,b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1]- b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0])\r\n        \r\n\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n    function descendingComparator(a,b,orderBy){\r\n        if (b[orderBy] < a[orderBy]){\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]){\r\n            return 1;   \r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stablesort(filterFn.fn(records),getComparator(order,orderBy)).\r\n            slice(page*rowsPerPage,(page+1)*rowsPerPage)\r\n    }\r\n\r\n    return{\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n\r\n    }\r\n}","import { Dialog, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    dialogWrapper :{\r\n        padding : theme.spacing(2),\r\n        position : 'absolute',\r\n        top : theme.spacing(5)\r\n    },\r\n    dialogTitle:{\r\n        paddingRight:'0px'\r\n    }    \r\n}))\r\nexport default function Popup(props){\r\n    const {title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n    return(\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{paper: classes.dialogWrapper}}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{display:'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{flexGrow:1}}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />                    \r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n\r\n        </Dialog>\r\n    )\r\n\r\n}","import { makeStyles, Snackbar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\nexport default function Notification(props) {\r\n    const {notify, setNotify} = props;\r\n    const classes = useStyles()\r\n    const handleClose = (event , reason) =>{\r\n        if (reason === 'clickaway'){\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className= {classes.root}\r\n            open = {notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            onClose={handleClose}>\r\n            <Alert \r\n                severity = {notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n    )\r\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Controls from \"./controls/Controls\";\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    dialog:{\r\n        padding: theme.spacing(2),\r\n        position:'absolute',\r\n        top:theme.spacing(5)\r\n    },\r\n    dialogContent:{\r\n        textAlign: 'center'\r\n    },\r\n    dialogActions:{\r\n        justifyContent:'center'\r\n\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n    return(\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper:classes.dialog }}>\r\n            <DialogTitle>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    <Typography variant=\"h6\">\r\n                        {confirmDialog.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {confirmDialog.subTitle}\r\n                    </Typography>\r\n                    <DialogActions className={classes.dialogContent}>\r\n                        <Controls.Button\r\n                            text=\"No\"\r\n                            color=\"default\"\r\n                            onClick={()=>setConfirmDialog({...confirmDialog, isOpen:false})} />\r\n                        <Controls.Button\r\n                            text=\"Yes\"\r\n                            color=\"secondary\" \r\n                            onClick={confirmDialog.onConfirm}/>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </DialogTitle>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport EmployeeForm from './EmployeeForm'\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport { Paper,makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport { useState } from 'react';\r\nimport { id } from 'date-fns/locale';\r\nimport Controls from '../../components/controls/Controls'\r\nimport { Search } from '@material-ui/icons';\r\nimport { set } from 'date-fns';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../../components/Popup\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from \"../../components/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    pageContent:{\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n    },\r\n    searchInput:{\r\n        width:'75%'\r\n    },\r\n    newButton:{\r\n        position:'absolute',\r\n        right: '10px'\r\n\r\n\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id:'fullName',label:'Employee Name'},\r\n    { id:'email',label:'Email Address(Personal)'},\r\n    { id:'mobile',label:'Mobile Number'},\r\n    { id:'department',label:'Department', disableSorting: true},\r\n    { id:'actions',label:'Actions', disableSorting: true},\r\n\r\n\r\n]\r\n\r\n\r\nexport default function Employees(){\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records,setRecords]=useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; }})\r\n    const [openPopup, setOpenPopup] = useState()\r\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState({isOpen:false, title:'', subTitle:''})\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records,headCells,filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn : items =>{\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))                \r\n            }\r\n        })\r\n    \r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id == 0 )\r\n            employeeService.insertEmployee(employee)\r\n        else\r\n            employeeService.updateEmployee(employee)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message:'Submitted Successfully',\r\n            type:'success'\r\n\r\n        })\r\n    }\r\n    const openInPopup = item =>{\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n    const onDelete = id =>{\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen:false\r\n        })\r\n\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen: true,\r\n            message:'Deleted Successfully',\r\n            type:'error'\r\n\r\n        })\r\n           \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n           <PageHeader\r\n                title=\"New Employee\"\r\n                subTitle=\"Form Design with Validation\"\r\n                icon={<PeopleOutlineIcon fontsize=\"large\"/>}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n                \r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className = {classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment:(<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange ={ handleSearch }\r\n                    />\r\n                    <Controls.Button\r\n                        text = \"Add New\"\r\n                        variant = \"outlined\"\r\n                        startIcon = {<AddIcon />}\r\n                        className = {classes.newButton}\r\n                        onClick= {() => { setOpenPopup(true); setRecordForEdit(null);}}\r\n\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead/>\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.mobile}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick = {() => {openInPopup(item)}}>\r\n                                            <EditIcon fontSize = \"small\"/>\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen:true,\r\n                                                    title:'Are you sure you want to delete this record ?',\r\n                                                    subTitle:\"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            < CloseIcon fontSize = \"small\"/>\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n\r\n                            )\r\n                        }\r\n\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Employee Form\"\r\n                openPopup = {openPopup}\r\n                setOpenPopup = { setOpenPopup }\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit}/>\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />      \r\n        </>    \r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport SideMenu from '../components/SideMenu';\nimport { makeStyles, CssBaseline, createMuiTheme } from '@material-ui/core';\nimport Header from '../components/Header';\nimport PageHeader from '../components/PageHeader';\n\nimport Employees from \"../pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n  palete:{\n    primary:{\n      main: \"#FF0000\",\n      light: '#3c44b126'\n    },\n    secondary:{\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background:{\n      default:\"#f4f5fd\"\n    },\n\n\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\nconst useStyles = makeStyles({\n  appMain:{\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        <Employees />\n      </div>\n      <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}